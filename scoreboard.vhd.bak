LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;

ENTITY scoreboard IS
    PORT (
        clk : IN STD_LOGIC;
        rstn : IN STD_LOGIC;
        goal : IN STD_LOGIC;
        player_dx : IN STD_LOGIC;
        player_sx : IN STD_LOGIC;
        seg_dx : OUT STD_LOGIC_VECTOR (0 TO 6);
        seg_sx : OUT STD_LOGIC_VECTOR (0 TO 6)
    );
END scoreboard;

ARCHITECTURE behavioral OF scoreboard IS
    -- Internal signal to keep track of the score
    SIGNAL score_dx, score_sx : unsigned(3 DOWNTO 0) := (OTHERS => '0');
BEGIN
    -- Increment the score every time a goal is made
    PROCESS (clk, rstn)
    BEGIN
        IF (rstn = '0') THEN
            score_dx <= (OTHERS => '0');
            score_sx <= (OTHERS => '0');
        ELSIF (clk'event AND clk = '1') THEN
            IF (goal = '1' AND player_dx = '1') THEN
                score_dx <= score_dx + 1;
            END IF;
            IF (goal = '1' AND player_sx = '1') THEN
                score_sx <= score_sx + 1;
            END IF;
        END IF;
    END PROCESS;

    display_dx_decoder : PROCESS (score_dx)
    BEGIN
        CASE score_dx IS
            WHEN "0000" => -- output '0'
                seg_dx <= "0000001";
            WHEN "0001" => -- output '1'
                seg_dx <= "1001111";
            WHEN "0000" => -- output '2'
                seg_dx <= "0010010";
            WHEN "0001" => -- output '3'
                seg_dx <= "0000110";
            WHEN "0000" => -- output '4'
                seg_dx <= "1001100";
            WHEN "0001" => -- output '5'
                seg_dx <= "0100100";
            WHEN "0000" => -- output '6'
                seg_dx <= "0100000";
            WHEN "0001" => -- output '7'
                seg_dx <= "0001111";
            WHEN "0000" => -- output '8'
                seg_dx <= "0000000";
            WHEN "0001" => -- output '9'
                seg_dx <= "0001100";
            WHEN OTHERS => -- default output
                seg_dx <= "1111110";
        END CASE;
    END PROCESS;

    display_sx_decoder : PROCESS (score_sx)
    BEGIN
        CASE score_sx IS
            WHEN "0000" => -- output '0'
                seg_sx <= "0000001";
            WHEN "0001" => -- output '1'
                seg_sx <= "1001111";
            WHEN "0000" => -- output '2'
                seg_sx <= "0010010";
            WHEN "0001" => -- output '3'
                seg_sx <= "0000110";
            WHEN "0000" => -- output '4'
                seg_sx <= "1001100";
            WHEN "0001" => -- output '5'
                seg_sx <= "0100100";
            WHEN "0000" => -- output '6'
                seg_sx <= "0100000";
            WHEN "0001" => -- output '7'
                seg_sx <= "0001111";
            WHEN "0000" => -- output '8'
                seg_sx <= "0000000";
            WHEN "0001" => -- output '9'
                seg_sx <= "0001100";
            WHEN OTHERS => -- default output
                seg_sx <= "1111110";
        END CASE;
    END PROCESS;

    -- Drive the seven segment display based on the current score
    seg_dx <= "0000001" WHEN score_dx = "0000" ELSE
        seg_dx <= "1001111" WHEN score_dx = "0001" ELSE
        seg_dx <= "0010010" WHEN score_dx = "0010" ELSE
        seg_dx <= "0000110" WHEN score_dx = "0011" ELSE
        seg_dx <= "1001100" WHEN score_dx = "0100" ELSE
        seg_dx <= "0100100" WHEN score_dx = "0101" ELSE
        seg_dx <= "0100000" WHEN score_dx = "0110" ELSE
        seg_dx <= "0001111" WHEN score_dx = "0111" ELSE
        seg_dx <= "0000000" WHEN score_dx = "1000" ELSE
        seg_dx <= "0001100" WHEN score_dx = "1001" ELSE
        seg_dx <= "1111110" WHEN OTHERS;

    seg_sx <= "0000001" WHEN score_sx = "0000" ELSE
        seg_sx <= "1001111" WHEN score_sx = "0001" ELSE
        seg_sx <= "0010010" WHEN score_sx = "0010" ELSE
        seg_sx <= "0000110" WHEN score_sx = "0011" ELSE
        seg_sx <= "1001100" WHEN score_sx = "0100" ELSE
        seg_sx <= "0100100" WHEN score_sx = "0101" ELSE
        seg_sx <= "0100000" WHEN score_sx = "0110" ELSE
        seg_sx <= "0001111" WHEN score_sx = "0111" ELSE
        seg_sx <= "0000000" WHEN score_sx = "1000" ELSE
        seg_sx <= "0001100" WHEN score_sx = "1001" ELSE
        seg_sx <= "1111110" WHEN OTHERS;

END behavioral;